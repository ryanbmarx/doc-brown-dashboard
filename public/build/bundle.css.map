{
  "version": 3,
  "sources": ["AmPm.svelte", "Date.svelte", "Keypad.svelte", "LED.svelte", "Speedometer.svelte", "App.svelte"],
  "sourcesContent": ["<script>\n  import { randomIntFromInterval } from \"../utils/random.js\";\n  export let am = true;\n\n  const translateX = randomIntFromInterval(-2, -2);\n  const translateY = randomIntFromInterval(-1, 1);\n</script>\n\n<style>\n  .meridian {\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 0.25rem;\n    align-items: center;\n    align-self: center;\n  }\n\n  .label {\n    display: inline-block;\n    text-align: center;\n    text-transform: uppercase;\n    background-color: var(--color-label);\n    padding: 0.1rem 0.7rem;\n    letter-spacing: 0.15rem;\n    font: bold 1rem/1em \"Orbitron\", sans-serif;\n    color: #ccc;\n    transform: translate(var(--translateX, 0), var(--translateY, 0))\n      rotate(var(--rotate, 0));\n  }\n\n  .dot {\n    --color-dot: #555;\n    width: var(--dot-height);\n    height: var(--dot-height);\n    background: var(--color-dot);\n    background: radial-gradient(\n      circle at 25% 18%,\n      #ffffff,\n      var(--color-dot) 45%\n    );\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n    transition: background 100ms ease-in-out;\n  }\n\n  .dot.dot--on {\n    --color-dot: var(--color-accent);\n  }\n</style>\n\n<div\n  class=\"meridian\"\n  class:am\n  style:--translateX=\"{translateX}px\"\n  style:--translateY=\"{translateY}px\"\n>\n  <span class=\"label\" style:--rotate=\"{randomIntFromInterval(-0.53, 0.53)}deg\"\n    >AM</span\n  >\n  <span class=\"dot\" class:dot--on={am} />\n  <span class=\"label\" style:--rotate=\"{randomIntFromInterval(-0.53, 0.53)}deg\"\n    >PM</span\n  >\n  <span class=\"dot\" class:dot--on={!am} />\n</div>\n", "<script>\n  import { randomIntFromInterval } from \"../utils/random.js\";\n  import { onMount } from \"svelte\";\n  import AmPm from \"./AmPm.svelte\";\n\n  export let label = \"\";\n  export let dateTarget;\n  export let accentColor;\n\n  $: month = months[dateTarget.getMonth()];\n  $: day = String(dateTarget.getDate()).padStart(2, 0);\n  $: year = dateTarget.getFullYear();\n  $: hours =\n    dateTarget.getHours() < 12\n      ? String(dateTarget.getHours()).padStart(2, 0)\n      : String(dateTarget.getHours() - 12).padStart(2, 0);\n  $: minutes = String(dateTarget.getMinutes()).padStart(2, 0);\n\n  const translateX = randomIntFromInterval(-5, 5);\n  const translateY = randomIntFromInterval(-2, 5);\n  const id = `${Math.random()}-label`;\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  onMount(() => {\n    console.log({ dateTarget });\n  });\n</script>\n\n<style>\n  .date {\n    display: grid;\n    gap: 0.25rem calc(2 * var(--gap));\n    grid-template-rows: minmax(1px 1fr) auto;\n    grid-template-columns:\n      minmax(1px, 3fr)\n      minmax(1px, 2fr)\n      minmax(1px, 4fr)\n      3.5rem\n      minmax(1px, 2fr)\n      minmax(1px, 2fr);\n\n    background: rgb(97, 97, 97);\n    padding: var(--gap);\n    max-width: 55rem;\n    margin: auto;\n  }\n\n  .date__part {\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-flow: column nowrap;\n    gap: 0.35rem;\n  }\n\n  .date__display {\n    display: block;\n    width: 100%;\n    border-radius: 2px;\n    background-color: black;\n    color: var(--color-accent);\n    padding: var(--date-part-padding);\n    padding-bottom: 0;\n    font-family: \"LCD Normal\", monospace;\n    font-weight: bold;\n    font-size: clamp(1rem, 4.3vw, 3.6rem);\n    text-transform: uppercase;\n    white-space: nowrap;\n    text-align: center;\n    text-shadow: 0 0 2px var(--color-accent);\n    letter-spacing: 0.3rem;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .date__display::after {\n    content: \"888888888\";\n    font-size: inherit;\n    color: currentColor;\n    font-family: inherit;\n    font-weight: inherit;\n    letter-spacing: inherit;\n    text-transform: inherit;\n    opacity: 0.3;\n    position: absolute;\n    left: var(--date-part-padding);\n  }\n\n  .date__label {\n    grid-column: 1/-1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .date__text {\n    display: inline-block;\n    text-align: center;\n    text-transform: uppercase;\n    background-color: black;\n    padding: 0.25rem 0.7rem;\n    letter-spacing: 0.15rem;\n    font: bold 1rem/1em \"Orbitron\", sans-serif;\n    color: #ccc;\n    transform: translate(var(--translateX, 0), var(--translateY, 0))\n      rotate(var(--rotate, 0));\n  }\n\n  .date__part .date__text {\n    background-color: var(--color-label);\n    transform: rotate(var(--rotate, 0));\n  }\n  .date__part--minutes::after,\n  .date__part--minutes::before {\n    content: \"\";\n    position: absolute;\n    right: calc(100% + var(--gap));\n    top: 53%;\n    width: var(--dot-height);\n    height: var(--dot-height);\n    background: var(--color-accent);\n    background: radial-gradient(\n      circle at 25% 18%,\n      #dddddd,\n      var(--color-accent) 65%\n    );\n    border-radius: 50%;\n    transform: translate(51%, 0);\n    border: 1px solid rgba(0, 0, 0, 0.3);\n    transition: background 100ms ease-in-out;\n  }\n  .date__part--minutes::after {\n    transform: translate(50%, calc(1.6 * var(--dot-height)));\n  }\n</style>\n\n<div\n  aria-labelledby={id}\n  class=\"date\"\n  style:--color-accent={accentColor}\n  style:--translateX=\"{translateX}px\"\n  style:--translateY=\"{translateY}px\"\n  style:border-radius=\"{randomIntFromInterval(2, 5)}px\"\n>\n  <div\n    class=\"date__part date__part--month\"\n    style:--rotate=\"{randomIntFromInterval(-0.6, 0.6)}deg\"\n  >\n    <span class=\"date__text\">Month</span>\n    <span class=\"date__display\">{month}</span>\n  </div>\n  <div\n    class=\"date__part date__part--day\"\n    style:--rotate=\"{randomIntFromInterval(-0.6, 0.6)}deg\"\n  >\n    <span class=\"date__text\">Day</span>\n    <span class=\"date__display\">{day}</span>\n  </div>\n  <div\n    class=\"date__part date__part--year\"\n    style:--rotate=\"{randomIntFromInterval(-0.6, 0.6)}deg\"\n  >\n    <span class=\"date__text\">Year</span>\n    <span class=\"date__display\">{year}</span>\n  </div>\n  <AmPm am={hours < 12} />\n  <div\n    class=\"date__part date__part--hours\"\n    style:--rotate=\"{randomIntFromInterval(-0.6, 0.6)}deg\"\n  >\n    <span class=\"date__text\">Hour</span>\n    <span class=\"date__display\">{hours}</span>\n  </div>\n  <div\n    class=\"date__part date__part--minutes\"\n    style:--rotate=\"{randomIntFromInterval(-0.6, 0.6)}deg\"\n  >\n    <span class=\"date__text\">Min</span>\n    <span class=\"date__display\">{minutes}</span>\n  </div>\n  <div\n    class=\"date__label\"\n    style:--rotate=\"{randomIntFromInterval(-0.6, 0.6)}deg\"\n  >\n    <span {id} class=\"date__text\">{label}</span>\n  </div>\n</div>\n", "<script>\n  import Date from \"./Date.svelte\";\n\n  export let value;\n\n  const lights = [\"red\", \"yellow\", \"lightgreen\", \"yellow\"];\n  let input = \"\";\n  let blink = true;\n  const minimum = 8;\n  function updateDate(e) {\n    if (input.length < minimum) return;\n\n    console.log(\"updating\");\n\n    const month = +input.slice(0, 2);\n    const day = +input.slice(2, 4);\n    const year = +input.slice(4, 8);\n\n    const hours = +input.slice(8, 10) || 0;\n    const minutes = +input.slice(10) || 0;\n\n    console.log({ month, day, year, hours, minutes });\n\n    window.dispatchEvent(new Event(\"go\"));\n    // if (month && day && year) {\n    //   //   value = new Date(year, month, day, hours, minutes);\n    //   console.log({ value: new Date(year, month, day, hours, minutes) });\n    // }\n  }\n\n  function handleNumber(e) {\n    const number = e.target.textContent;\n    input += number;\n  }\n\n  function onReset() {\n    input = \"\";\n  }\n</script>\n\n<style>\n  .controls {\n    --lights-width: 3rem;\n    --lights-padding: 0;\n    width: 100%;\n    max-width: 25rem;\n    margin: 2rem auto;\n    background: #222;\n    display: grid;\n    gap: var(--gap);\n    padding: 1rem;\n    grid-template: auto minmax(1px, 1fr) / var(--lights-width) minmax(1px, 1fr);\n  }\n\n  .controls__keypad {\n    grid-row: 2;\n    grid-column: 2;\n    /* padding: var(--lights-padding); */\n  }\n\n  .keypad {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: grid;\n    gap: 0.5rem;\n    grid-template: auto / repeat(3, minmax(1px, 1fr));\n\n    background-color: white;\n    padding: 1rem;\n  }\n\n  :global(.key--0) {\n    grid-column: 2;\n  }\n\n  .key {\n    aspect-ratio: 1/1;\n  }\n\n  .key button {\n    background-color: white;\n    width: 100%;\n    height: 100%;\n    border: 1px solid black;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    font: 1.5rem/1em \"Arial\", \"Orbitron\", sans-serif;\n  }\n\n  .controls__lights {\n    padding: var(--lights-padding);\n    grid-row: 1 / -1;\n    grid-column: 1;\n  }\n\n  .controls__lights > :global(*) {\n    margin-bottom: 1rem;\n  }\n\n  .light {\n    height: var(--lights-width);\n    width: var(--lights-width);\n    background-color: var(--color-accent);\n    position: relative;\n    box-shadow: 0 0 6px var(--color-accent);\n    border: none;\n    transition: filter 100ms ease-in-out, opacity 100ms ease-in-out;\n  }\n\n  .light::after {\n    content: \"\";\n    display: block;\n    background: white;\n    background: radial-gradient(\n      #000000 0%,\n      #ffffff 5%,\n      #000000 10%,\n      #ffffff 15%,\n      #000000 20%,\n      #ffffff 25%,\n      #000000 30%,\n      #ffffff 35%,\n      #000000 40%,\n      #ffffff 45%,\n      #000000 50%,\n      #ffffff 55%,\n      #000000 60%,\n      #ffffff 65%,\n      #000000 70%,\n      #ffffff 75%,\n      #000000 80%,\n      #ffffff 85%,\n      #000000 90%,\n      #ffffff 95%,\n      #000 100%\n    );\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    height: 85%;\n    width: 85%;\n    border-radius: 50%;\n    mix-blend-mode: lighten;\n    opacity: 0.9;\n    filter: blur(1px);\n  }\n\n  .mute {\n    filter: grayscale(1);\n    opacity: 0.3;\n  }\n\n  .blink {\n    animation: blink 600ms ease-out infinite alternate forwards;\n  }\n\n  .controls__readout {\n    grid-column: 2;\n    grid-row: 1;\n    padding: 1rem;\n    display: block;\n    width: 100%;\n    border-radius: 2px;\n    background-color: black;\n    color: var(--color-accent, pink);\n    padding: var(--date-part-padding);\n    padding-bottom: 0;\n    position: relative;\n    overflow: hidden;\n    min-height: 1em;\n    /* TEXT */\n    font-family: \"LCD Normal\", monospace;\n    font-weight: bold;\n    font-size: clamp(1rem, 4.3vw, 2rem);\n    text-transform: uppercase;\n    white-space: nowrap;\n    text-align: left;\n    text-shadow: 0 0 2px var(--color-accent);\n    letter-spacing: 0.3rem;\n  }\n\n  .controls__readout::after {\n    content: \"8888888888888\";\n    font-size: inherit;\n    color: currentColor;\n    font-family: inherit;\n    font-weight: inherit;\n    letter-spacing: inherit;\n    text-transform: inherit;\n    position: absolute;\n    text-align: left;\n    opacity: 0.3;\n  }\n\n  @keyframes blink {\n    from {\n      opacity: 0.4;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n</style>\n\n<div class=\"controls\">\n  <div class=\"controls__lights\">\n    <div\n      class=\"light\"\n      class:mute={input.length >= minimum}\n      style:--color-accent=\"red\"\n    />\n    <div\n      class=\"light\"\n      class:mute={input.length >= minimum}\n      style:--color-accent=\"yellow\"\n    />\n    <button\n      class=\"light\"\n      class:blink={input.length >= minimum}\n      style:--color-accent=\"lightgreen\"\n      on:click={updateDate}\n    />\n    <div\n      class=\"light\"\n      class:mute={input.length >= minimum}\n      style:--color-accent=\"yellow\"\n    />\n  </div>\n  <div class=\"controls__readout\">\n    {input}\n  </div>\n  <div class=\"controls__keypad\">\n    <ul class=\"keypad\">\n      {#each [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] as number}\n        <li class=\"key key--{number}\">\n          <button on:click={handleNumber}>{@html number}</button>\n        </li>\n      {/each}\n      <li class=\"key key--reset\">\n        <button on:click={onReset}>&times;</button>\n      </li>\n    </ul>\n  </div>\n</div>\n", "<script>\n  export let number = \"\";\n  export let fillText = [\"8888\", \"1111\", \"7777\"];\n</script>\n\n<style>\n  .led {\n    /* CONFIG */\n    --speedometer-color: pink;\n    --speedometer-font-size: 8rem;\n    /* --speedometer-padding: 1rem; */\n    /* --speedometer-letter-spacing: 0.3rem; */\n\n    /* CONFIG DEFAULTS */\n    --speedometer-default-color: yellow;\n    --speedometer-default-font-size: clamp(1rem, 4.3vw, 3.6rem);\n    --speedometer-default-padding: 1rem;\n    --speedometer-default-letter-spacing: 0.3rem;\n\n    /* SCAFFOLDING & SHAPE*/\n    display: block;\n    width: 100%;\n    max-width: fit-content;\n    padding: var(--speedometer-padding, var(--speedometer-default-padding));\n    padding-bottom: 0;\n    position: relative;\n    overflow: hidden;\n\n    /* VISUAL DISPLAY */\n    border-radius: 2px;\n    background-color: black;\n    color: var(--speedometer-color, var(--speedometer-default-color));\n  }\n\n  .led__fill,\n  .led__number {\n    font-family: \"LCDMono2 Normal\", monospace;\n    font-weight: bold;\n    font-size: var(\n      --speedometer-font-size,\n      var(--speedometer-default-font-size)\n    );\n    text-transform: uppercase;\n    white-space: nowrap;\n    text-align: right;\n    text-shadow: 0 0 2px\n      var(--speedometer-color, var(--speedometer-default-color));\n    letter-spacing: var(\n      --speedometer-letter-spacing,\n      var(--speedometer-default-letter-spacing)\n    );\n    color: var(--speedometer-color, var(--speedometer-default-color));\n  }\n  .led__number {\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    padding: var(--speedometer-padding, var(--speedometer-default-padding));\n  }\n  .led__fill {\n    opacity: 0.3;\n    color: white;\n  }\n</style>\n\n<div class=\"led\">\n  <span class=\"led__fill\">{fillText}</span>\n  <span class=\"led__number\">{number}</span>\n</div>\n", "<script>\n  import { format } from \"d3-format\";\n  import LED from \"./LED.svelte\";\n\n  let speed = \"\";\n\n  const formatNumber = format(\".1f\");\n  function handleGo(e) {\n    console.log(\"going\");\n    if (!speed) speed = 0;\n    console.log(speed);\n    const speeder = setInterval(() => {\n      speed += 0.1;\n      if (speed >= 88) clearInterval(speeder);\n    }, 10);\n  }\n</script>\n\n<style>\n  .speedometer {\n    background: #ccc;\n  }\n</style>\n\n<svelte:window on:go={handleGo} />\n<div class=\"speedometer\">\n  <LED fillText={[88.8, 11.1, 77.7]} number={formatNumber(speed)} />\n</div>\n", "<script>\n  import DateModule from \"./components/Date.svelte\";\n  import Keypad from \"./components/Keypad.svelte\";\n  import Speedometer from \"./components/Speedometer.svelte\";\n\n  let keypad;\n\n  let datesVisited = [new Date(1985, 9, 26, 1, 21, 0)];\n\n  const dates = [\n    {\n      dateTarget: new Date(1985, 9, 26, 1, 20, 0),\n      accentColor: \"#F6581B\",\n      label: \"Destination time\",\n    },\n    {\n      dateTarget: new Date(),\n      accentColor: \"#4FC93F\",\n      label: \"Present time\",\n    },\n\n    {\n      dateTarget: datesVisited.at(-1),\n      accentColor: \"#E6CA36\",\n      label: \"Last time departed\",\n    },\n  ];\n  // const dates = [\n  //   {\n  //     dateTarget: new Date(1985, 9, 26, 1, 21, 0),\n  //     accentColor: \"#F6581B\",\n  //     label: \"Destination time\",\n  //   },\n  //   {\n  //     dateTarget: new Date(1985, 9, 26, 13, 22, 0),\n  //     accentColor: \"#4FC93F\",\n  //     label: \"Present time\",\n  //   },\n\n  //   {\n  //     dateTarget: new Date(1985, 9, 26, 1, 20, 0),\n  //     accentColor: \"#E6CA36\",\n  //     label: \"Last time departed\",\n  //   },\n  // ];\n</script>\n\n<style>\n  :root {\n    --letter-width: 2rem;\n    --gap: 1rem;\n    --date-part-padding: 0.5rem;\n    --color-label: #4e0b06;\n    --dot-height: 0.65rem;\n  }\n\n  :global(*) {\n    box-sizing: border-box;\n  }\n\n  .dash {\n    grid-column: 1/-1;\n    padding: 1rem;\n    background-color: #222;\n    display: flex;\n    flex-flow: column nowrap;\n    gap: 0.5rem;\n  }\n\n  main {\n    display: grid;\n    gap: var(--gap);\n    grid-template: auto auto / minmax(1px, 2fr) minmax(1px, 1fr);\n  }\n</style>\n\n<main>\n  <div class=\"dash\">\n    {#each dates as { dateTarget, accentColor, label }}\n      <DateModule {dateTarget} {accentColor} {label} />\n    {/each}\n  </div>\n\n  <Keypad bind:this={keypad} />\n  <Speedometer />\n</main>\n"],
  "mappings": ";AASE;AACE;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIF;AACE;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;AAGF;AACE;;;;ACJF;AACE;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;AACA;;AAEF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIF;AACE;AACA;;AAEF;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;;AAEF;AACE;;;;ACvGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;;AAIF;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGM;AACN;;AAGF;AACE;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAGF;AACE;AACA;AACA;;AAGF;AACE;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;;AAGF;AACE;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF;;AAEI;;;AAGA;;;;;ACvMJ;AAEE;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAGF;;AAEE;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;;AAEF;AACE;AACA;AACA;AACA;AACA;AACA;;AAEF;AACE;AACA;;;;AC5CF;AACE;;;;AC4BF;AACE;AACA;AACA;AACA;AACA;;AAGM;AACN;;AAGF;AACE;AACA;AACA;AACA;AACA;AACA;;AAGF;AACE;AACA;AACA;;",
  "names": []
}
